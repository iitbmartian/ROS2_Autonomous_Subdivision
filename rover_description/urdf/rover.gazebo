// Snake case conversion for self_collide for all components. Then plugin for skid_steer_drive the snake casing. Changed filename as well as snake casing for head_hokuyo_controller. The snake casing for gazebo_ros_control, camera_plugin, imu_sensor and gps_controller
<?xml version="1.0" ?>

<robot>
  <self_collide>true</self_collide>
  <gazebo reference="base_link">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="Left_rocker">
    <material>Gazebo/Grey</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="Right_rocker">
    <material>Gazebo/Grey</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="Left_bogie">
    <material>Gazebo/DarkGrey</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="Right_bogie">
    <material>Gazebo/DarkGrey</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_1">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_2">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_3">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_4">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_5">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>
  <gazebo reference="wheel_6">
    <material>Gazebo/Trunk</material>
    <self_collide>true</self_collide>
  </gazebo>

  <!-- old plugin -->
  <!-- <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>wheel_joint_1</leftJoint>
      <rightJoint>wheel_joint_4</rightJoint>
      <rosDebugLevel>1</rosDebugLevel>
      <publishOdomTF>true</publishOdomTF>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelSeparation>0.43</wheelSeparation>
      <wheelDiameter>0.15</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel_filtered</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
    </plugin>
  </gazebo> -->

  <!-- new plugin for 4 wheels -->
  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
      <update_rate>10.0</update_rate>
      <robot_namespace>/</robot_namespace>
      <left_front_joint>wheel_joint_4</left_front_joint>
      <right_front_joint>wheel_joint_1</right_front_joint>
      <left_rear_joint>wheel_joint_6</left_rear_joint>
      <right_rear_joint>wheel_joint_3</right_rear_joint>
      <wheel_separation>0.43</wheel_separation>
      <wheel_diameter>0.215</wheel_diameter>
      <robot_base_frame>root_link</robot_base_frame>
      <torque>20</torque> <!-- _filtered -->
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <broadcast_tf>true</broadcast_tf>
    </plugin>
  </gazebo>

  <gazebo reference="sensor_laser">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0.2 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-3</min_angle>
            <max_angle>3<!-- 1.570796 --></max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.20</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
        <topic_name>/mrt/laser/scan</topic_name>
        <frame_name>sensor_laser</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robot_namespace>/rover</robot_namespace>
      <robot_sim_type>gazebo_ros_control/DefaultRobotHWSim</robot_sim_type>
    </plugin>
  </gazebo>

  <!-- camera -->
  <gazebo reference="mrt/camera_link">
    <!-- <sensor type="camera" name="camera1"> -->
    <sensor type="depth" name="camera1">
      <update_rate>15.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>B8G8R8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
  
      <!-- <plugin name="camera_controller" filename="libgazebo_ros_camera.so"> -->
      <!--   <alwaysOn>true</alwaysOn> -->
      <!--   <updateRate>0.0</updateRate> -->
      <!--   <cameraName>camera</cameraName> -->
      <!--   <imageTopicName>image_raw</imageTopicName> -->
      <!--   <cameraInfoTopicName>camera_info</cameraInfoTopicName> -->
      <!--   <frameName>camera_link</frameName> -->
      <!--   <hackBaseline>0.07</hackBaseline> -->
      <!--   <distortionK1>0.0</distortionK1> -->
      <!--   <distortionK2>0.0</distortionK2> -->
      <!--   <distortionK3>0.0</distortionK3> -->
      <!--   <distortionT1>0.0</distortionT1> -->
      <!--   <distortionT2>0.0</distortionT2> -->
    <!-- </plugin> --> 
      <plugin name="camera_plugin" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <always_on>true</always_on>
        <!-- Keep this zero, update_rate in the parent <sensor> tag -->
          <!-- will control the frame rate. -->
        <update_rate>0.0</update_rate>
        <camera_name>mrt/camera</camera_name>
        <image_topic_name>color/image_raw</image_topic_name>
        <camera_info_topic_name>color/camera_info</camera_info_topic_name>
        <depth_image_topic_name>depth/image_rect_raw</depth_image_topic_name>
        <depth_image_camera_info_topic_name>depth/camera_info</depth_image_camera_info_topic_name>
        <point_cloud_topic_name>depth/color/points</point_cloud_topic_name>
        <frame_name>camera_link_optical</frame_name>
        <point_cloud_cutoff>0.5</point_cloud_cutoff>
        <point_cloud_cutoff_max>7.0</point_cloud_cutoff_max>
        <distortion_k1>0</distortion_k1>
        <distortion_k2>0</distortion_k2>
        <distortion_k3>0</distortion_k3>
        <distortion_t1>0</distortion_t1>
        <distortion_t2>0</distortion_t2>
        <cx_prime>0</cx_prime>
        <cx>0</cx>
        <cy>0</cy>
        <focal_length>0</focal_length>
      </plugin>
    </sensor>
  </gazebo>

  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topic_name>imu/data_raw</topic_name>
        <body_name>imu_link</body_name>
        <update_rate_hz>10.0</update_rate_hz>
        <gaussian_noise>0.0</gaussian_noise>
        <xyz_offset>0 0 0</xyz_offset>
        <rpy_offset>0 0 0</rpy_offset>
        <frame_name>imu_link</frame_name>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>

  </gazebo>
  <gazebo>
    <plugin name="gps_controller" filename="libhector_gazebo_ros_gps.so">
      <always_on>true</always_on>
      <update_rate>1.0</update_rate>
      <body_name>base_link</body_name>
      <topic_name>fix</topic_name>
      <velocity_topic_name>fix_velocity</velocity_topic_name>
      <drift>0.0 0.0 0.0</drift>
      <gaussian_noise>0.0001 0.0001 0.0001</gaussian_noise>
      <velocity_drift>0 0 0</velocity_drift>
      <velocity_gaussian_noise>0.0 0.0 0.0</velocity_gaussian_noise>
    </plugin>
  </gazebo>
</robot>
